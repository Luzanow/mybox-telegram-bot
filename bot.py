import logging
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "7680848123:AAHqNizmx3hOXmjVOmzdnwQCenlXHTWX8OA"
ADMIN_CHAT_ID = '5498505652'

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_data = {}

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π", "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
    await message.answer("üëç –í—ñ—Ç–∞—î–º–æ —É MyBox!\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π")
async def view_locations(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    locations = [
        ("üìç –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "https://maps.google.com/?q=50.425689,30.483118"),
        ("üìç –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1", "https://maps.google.com/?q=50.400233,30.457452")
    ]
    for loc, link in locations:
        keyboard.add(types.InlineKeyboardButton(text=loc, url=link))
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –Ω–∞ –∫–∞—Ä—Ç—ñ:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
async def rent(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("5 —Ñ—É—Ç—ñ–≤ - 1850 –≥—Ä–Ω", "7.5 —Ñ—É—Ç—ñ–≤ - 2350 –≥—Ä–Ω", "15 —Ñ—É—Ç—ñ–≤ - 3800 –≥—Ä–Ω", "30 —Ñ—É—Ç—ñ–≤ - 6650 –≥—Ä–Ω")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑ —Ü—ñ–Ω–æ—é:", reply_markup=keyboard)

@dp.message_handler(lambda message: "—Ñ—É—Ç—ñ–≤" in message.text)
async def select_location(message: types.Message):
    user_data[message.from_user.id] = {"size": message.text.split(" - ")[0]}
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("\ud83d\udccd –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "\ud83d\udccd –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text.startswith("üìç"))
async def select_months(message: types.Message):
    user_data[message.from_user.id]["location"] = message.text
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(*[f"{i} –º—ñ—Å—è—Ü—ñ–≤" if i > 1 else "1 –º—ñ—Å—è—Ü—å" for i in range(1, 13)])
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏ (1‚Äì12 –º—ñ—Å—è—Ü—ñ–≤):", reply_markup=keyboard)

@dp.message_handler(lambda message: "–º—ñ—Å—è—Ü" in message.text)
async def ask_name(message: types.Message):
    user_data[message.from_user.id]["months"] = int(message.text.split()[0])
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")

@dp.message_handler(lambda message: message.text.isalpha())
async def ask_phone(message: types.Message):
    user_data[message.from_user.id]["name"] = message.text
    await message.answer("–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É:")

@dp.message_handler(lambda message: message.text.startswith("+") or message.text.isdigit())
async def finish(message: types.Message):
    uid = message.from_user.id
    user_data[uid]["phone"] = message.text
    data = user_data[uid]
    prices = {"5 —Ñ—É—Ç—ñ–≤": 1850, "7.5 —Ñ—É—Ç—ñ–≤": 2350, "15 —Ñ—É—Ç—ñ–≤": 3800, "30 —Ñ—É—Ç—ñ–≤": 6650}
    price = prices.get(data["size"], 0) * data["months"]
    text = f"‚úÖ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\nüë§ –Ü–º'—è: {data['name']}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\nüì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: {data['size']}\nüìç –õ–æ–∫–∞—Ü—ñ—è: {data['location']}\nüóìÔ∏è –ú—ñ—Å—è—Ü—ñ–≤: {data['months']}\nüí∞ –°—É–º–∞: {price} –≥—Ä–Ω"
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=text)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("\ud83d\udce6 \u041e\u0440\u0435\u043d\u0434\u0443\u0432\u0430\u0442\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440", "\ud83d\udccd \u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u043b\u043e\u043a\u0430\u0446\u0456\u0439", "\ud83d\udcde \u0417\u0432'\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0437 \u043d\u0430\u043c\u0438")
    await message.answer("\u2705 \u0414\u044f\u043a\u0443\u0454\u043c\u043e! \u0412\u0430\u0448\u0430 \u0437\u0430\u044f\u0432\u043a\u0430 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430.", reply_markup=keyboard)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
