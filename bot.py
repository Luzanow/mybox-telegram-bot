import logging
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "7680848123:AAGeVHb8glcUbbb-9IEcdGAauNcG2p2Oeag"
ADMIN_CHAT_ID = "5498505652"

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_data = {}

main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
main_menu.add("üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π")
main_menu.add("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")

# –°—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer("üëç –í—ñ—Ç–∞—î–º–æ —É MyBox!\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:", reply_markup=main_menu)

# –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π
@dp.message_handler(lambda m: m.text == "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π")
async def show_locations(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=1)
    locations = [
        ("–ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞, 22/15", "https://maps.app.goo.gl/RpDz2E671UVgkQg57"),
        ("–í—ñ–¥—Ä–∞–¥–Ω–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 107", "https://maps.app.goo.gl/gjmy3mC4TmWH27r87"),
        ("–ö–∏—Ä–∏–ª—ñ–≤—Å—å–∫–∞, 41", "https://maps.app.goo.gl/5QYTYfAWqQ7W8pcm7"),
        ("–î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞, 21", "https://maps.app.goo.gl/2zrWpCkeF3r5TMh39"),
        ("–°–∞–¥–æ–≤–∞, 16", "https://maps.app.goo.gl/sCb6wYY3YQtVwVao7"),
        ("–ë–µ–∑–Ω—è–∫–æ–≤—Å–∫–∞—è, 21", "https://maps.app.goo.gl/9K2ED7EGih4t1dvb7"),  # –î–æ–¥–∞–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        ("–ú–∏–∫–æ–ª–∏ –í–∞—Å–∏–ª–µ–Ω–∫–∞, 2", "https://maps.app.goo.gl/Cp6tUB7DGbLz3bdFA"),
        ("–í—ñ–Ω—Å—Ç–æ–Ω–∞ –ß–µ—Ä—á–∏–ª–ª—è, 42", "https://maps.app.goo.gl/FNuaeyQHFxaxgCai9"),
        ("–õ—É–≥–æ–≤–∞, 9", "https://maps.app.goo.gl/aCrfjN9vbBjhM17YA"),
        ("–Ñ–≤–≥–µ–Ω—ñ—è –•–∞—Ä—á–µ–Ω–∫–∞, 35", "https://maps.app.goo.gl/MpGAvtA6awMYKn7s6"),
        ("–í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ë—Ä–æ–∂–∫–∞, 38/58", "https://maps.app.goo.gl/vZAjD6eo84t8qyUk6"),
        ("–ú–µ–∂–∏–≥—ñ—Ä—Å—å–∫–∞, 78", "https://maps.app.goo.gl/hdUn8ciM5QLwbLTs6")
    ]
    
    for name, url in locations:
        keyboard.add(InlineKeyboardButton(text=name, url=url))
    
    await message.answer("üìç –û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –∑—ñ —Å–ø–∏—Å–∫—É:", reply_markup=keyboard)
# –ó–≤‚Äô—è–∑–æ–∫
@dp.message_handler(lambda m: m.text == "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
async def contact(message: types.Message):
    contact_kb = types.InlineKeyboardMarkup()
    contact_kb.add(types.InlineKeyboardButton("üì® –ù–∞–ø–∏—Å–∞—Ç–∏ –≤ Telegram", url="https://t.me/Taras031990"))
    await message.answer(
        "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞: –¢–∞—Ä–∞—Å\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: +380 (95) 938 73 17\nüåê –°–∞–π—Ç: https://mybox.kiev.ua",
        reply_markup=contact_kb
    )

# –û—Ä–µ–Ω–¥–∞
@dp.message_handler(lambda m: m.text == "üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
async def rent_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("5 —Ñ—É—Ç—ñ–≤ - 1850 –≥—Ä–Ω", "7.5 —Ñ—É—Ç—ñ–≤ - 2350 –≥—Ä–Ω")
    keyboard.add("15 —Ñ—É—Ç—ñ–≤ - 3800 –≥—Ä–Ω", "30 —Ñ—É—Ç—ñ–≤ - 6650 –≥—Ä–Ω")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑ —Ü—ñ–Ω–æ—é:", reply_markup=keyboard)

@dp.message_handler(lambda m: "—Ñ—É—Ç—ñ–≤" in m.text)
async def rent_location(message: types.Message):
    user_data[message.from_user.id] = {"size": message.text.split(" - ")[0]}
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    locations = [
        "üìç –õ—É–≥–æ–≤–∞ 9", "üìç –ü–ª–æ–¥–æ–≤–∞ 1", "üìç –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞ 21", "üìç –°—ñ–º'—ó –°–æ—Å–Ω—ñ–Ω–∏—Ö 3", "üìç –õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ 119",
        "üìç –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞ 5", "üìç –ü—É—Ö—ñ–≤—Å—å–∫–∞ 4–ê", "üìç –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞ 18", "üìç –ë–∞–ª—å–∑–∞–∫–∞ 85–ê",
        "üìç –ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó 5", "üìç –ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞ 9", "üìç –í—ñ—Å–∫–æ–∑–Ω–∞ 1", "üìç –ü—Ä–æ–º–∏—Å–ª–æ–≤–∞ 4"
    ]
    for loc in locations:
        keyboard.add(loc)
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:", reply_markup=keyboard)

@dp.message_handler(lambda m: m.text.startswith("üìç"))
async def rent_months(message: types.Message):
    user_data[message.from_user.id]["location"] = message.text
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(*[f"{i} –º—ñ—Å—è—Ü—ñ–≤" if i > 1 else "1 –º—ñ—Å—è—Ü—å" for i in range(1, 13)])
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏ (1‚Äì12 –º—ñ—Å—è—Ü—ñ–≤):", reply_markup=keyboard)

@dp.message_handler(lambda m: "–º—ñ—Å—è—Ü" in m.text.lower())
async def rent_name(message: types.Message):
    try:
        user_data[message.from_user.id]["months"] = int(message.text.split()[0])
        await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")
    except Exception:
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –∑ –∫–Ω–æ–ø–æ–∫.")

@dp.message_handler(lambda m: m.text.replace(" ", "").isalpha())
async def rent_phone(message: types.Message):
    user_data[message.from_user.id]["name"] = message.text
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(types.KeyboardButton("üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True))
    keyboard.add("–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É")
    await message.answer("–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É:", reply_markup=keyboard)

@dp.message_handler(content_types=['contact'])
async def contact_received(message: types.Message):
    user_data[message.from_user.id]["phone"] = message.contact.phone_number
    await finalize_application(message)

@dp.message_handler(lambda m: m.text.replace("+", "").isdigit())
async def manual_phone(message: types.Message):
    user_data[message.from_user.id]["phone"] = message.text
    await finalize_application(message)

async def finalize_application(message: types.Message):
    uid = message.from_user.id
    data = user_data.get(uid, {})
    prices = {"5 —Ñ—É—Ç—ñ–≤": 1850, "7.5 —Ñ—É—Ç—ñ–≤": 2350, "15 —Ñ—É—Ç—ñ–≤": 3800, "30 —Ñ—É—Ç—ñ–≤": 6650}
    total = prices.get(data.get("size", ""), 0) * data.get("months", 1)

    result = (
        f"‚úÖ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n"
        f"üë§ –Ü–º'—è: {data.get('name')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}\n"
        f"üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: {data.get('size')}\n"
        f"üìç –õ–æ–∫–∞—Ü—ñ—è: {data.get('location')}\n"
        f"üóìÔ∏è –ú—ñ—Å—è—Ü—ñ–≤: {data.get('months')}\n"
        f"üí∞ –°—É–º–∞: {total} –≥—Ä–Ω"
    )
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=result)
    await message.answer("‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.", reply_markup=main_menu)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
