import logging
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "7680848123:AAHqNizmx3hOXmjVOmzdnwQCenlXHTWX8OA"  # –í–∞—à —Ç–æ–∫–µ–Ω
ADMIN_CHAT_ID = '5498505652'  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π Telegram ID

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_data = {}

# –°—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π", "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
    await message.answer("üñê –í—ñ—Ç–∞—î–º–æ —É MyBox!\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:", reply_markup=keyboard)

# –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π
@dp.message_handler(lambda message: message.text == "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π")
async def view_locations(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)

    locations = [
        ("üìç –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "https://maps.google.com/?q=50.425689,30.483118", "1850 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1", "https://maps.google.com/?q=50.400233,30.457452", "1800 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞ 21", "https://maps.google.com/?q=50.457832,30.480274", "1900 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –°—ñ–º'—ó –°–æ—Å–Ω—ñ–Ω–∏—Ö 3", "https://maps.google.com/?q=50.434291,30.464987", "1700 –≥—Ä–Ω"),
        ("üìç –ø—Ä-—Ç –õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ 119", "https://maps.google.com/?q=50.426594,30.495850", "2000 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞ 5", "https://maps.google.com/?q=50.464835,30.490526", "2100 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ü—É—Ö—ñ–≤—Å—å–∫–∞ 4–ê", "https://maps.google.com/?q=50.422968,30.510332", "2200 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞ 18", "https://maps.google.com/?q=50.438151,30.497368", "2100 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ë–∞–ª—å–∑–∞–∫–∞ 85–ê", "https://maps.google.com/?q=50.395106,30.455319", "2000 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó 5", "https://maps.google.com/?q=50.476872,30.464531", "1900 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞ 9", "https://maps.google.com/?q=50.446179,30.476200", "1850 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –í—ñ—Å–∫–æ–∑–Ω–∞ 1", "https://maps.google.com/?q=50.453824,30.487111", "1750 –≥—Ä–Ω"),
        ("üìç –≤—É–ª. –ü—Ä–æ–º–∏—Å–ª–æ–≤–∞ 4", "https://maps.google.com/?q=50.425598,30.508532", "1800 –≥—Ä–Ω")
    ]

    for loc, link, price in locations:
        keyboard.add(types.InlineKeyboardButton(text=f"{loc} - {price}", url=link))

    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –Ω–∞ –∫–∞—Ä—Ç—ñ:", reply_markup=keyboard)

# –û—Ä–µ–Ω–¥–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
@dp.message_handler(lambda message: message.text == "üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
async def rent_container(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π", "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")

    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –æ—Ä–µ–Ω–¥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:", reply_markup=keyboard)
    user_data[message.from_user.id] = {'state': 'select_location'}

# –õ–æ–∫–∞—Ü—ñ—è –≤–∏–±—Ä–∞–Ω–∞
@dp.message_handler(lambda message: message.text in ["üìç –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "üìç –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1", "üìç –≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞ 21", 
                                                   "üìç –≤—É–ª. –°—ñ–º'—ó –°–æ—Å–Ω—ñ–Ω–∏—Ö 3", "üìç –ø—Ä-—Ç –õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ 119", 
                                                   "üìç –≤—É–ª. –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞ 5", "üìç –≤—É–ª. –ü—É—Ö—ñ–≤—Å—å–∫–∞ 4–ê", 
                                                   "üìç –≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞ 18", "üìç –≤—É–ª. –ë–∞–ª—å–∑–∞–∫–∞ 85–ê", 
                                                   "üìç –≤—É–ª. –ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó 5", "üìç –≤—É–ª. –ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞ 9", 
                                                   "üìç –≤—É–ª. –í—ñ—Å–∫–æ–∑–Ω–∞ 1", "üìç –≤—É–ª. –ü—Ä–æ–º–∏—Å–ª–æ–≤–∞ 4"])
async def location_chosen(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("5 —Ñ—É—Ç—ñ–≤", "7.5 —Ñ—É—Ç—ñ–≤", "15 —Ñ—É—Ç—ñ–≤", "30 —Ñ—É—Ç—ñ–≤")
    
    await message.answer(f"–í–∏ –≤–∏–±—Ä–∞–ª–∏ –ª–æ–∫–∞—Ü—ñ—é: {message.text}. –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:", reply_markup=keyboard)
    user_data[message.from_user.id]['location'] = message.text
    user_data[message.from_user.id]['state'] = 'select_size'

# –í–∏–±—ñ—Ä —Ä–æ–∑–º—ñ—Ä—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
@dp.message_handler(lambda message: message.text in ["5 —Ñ—É—Ç—ñ–≤", "7.5 —Ñ—É—Ç—ñ–≤", "15 —Ñ—É—Ç—ñ–≤", "30 —Ñ—É—Ç—ñ–≤"])
async def select_container_size(message: types.Message):
    user_data[message.from_user.id]['size'] = message.text
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("1 –º—ñ—Å—è—Ü—å", "3 –º—ñ—Å—è—Ü—ñ", "6 –º—ñ—Å—è—Ü—ñ–≤", "12 –º—ñ—Å—è—Ü—ñ–≤")

    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏ (–≤ –º—ñ—Å—è—Ü—è—Ö):", reply_markup=keyboard)
    user_data[message.from_user.id]['state'] = 'select_term'

# –í–∏–±—ñ—Ä —Ç–µ—Ä–º—ñ–Ω—É –æ—Ä–µ–Ω–¥–∏
@dp.message_handler(lambda message: message.text in ["1 –º—ñ—Å—è—Ü—å", "3 –º—ñ—Å—è—Ü—ñ", "6 –º—ñ—Å—è—Ü—ñ–≤", "12 –º—ñ—Å—è—Ü—ñ–≤"])
async def select_rent_term(message: types.Message):
    user_data[message.from_user.id]['term'] = message.text
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")
    user_data[message.from_user.id]['state'] = 'enter_name'

# –í–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ
@dp.message_handler(state='enter_name')
async def enter_name(message: types.Message):
    user_data[message.from_user.id]['name'] = message.text
    await message.answer("–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É:")
    user_data[message.from_user.id]['state'] = 'enter_phone'

# –í–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
@dp.message_handler(state='enter_phone', content_types=[types.ContentType.CONTACT, types.ContentType.TEXT])
async def enter_phone(message: types.Message):
    phone_number = message.text if message.contact is None else message.contact.phone_number
    user_data[message.from_user.id]['phone'] = phone_number

    location = user_data[message.from_user.id]['location']
    size = user_data[message.from_user.id]['size']
    term = user_data[message.from_user.id]['term']
    name = user_data[message.from_user.id]['name']

    # –§–æ—Ä–º—É—î–º–æ –∑–∞—è–≤–∫—É
    text = f"–ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ä–µ–Ω–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:\n" \
           f"–Ü–º'—è: {name}\n" \
           f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}\n" \
           f"–õ–æ–∫–∞—Ü—ñ—è: {location}\n" \
           f"–†–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: {size}\n" \
           f"–¢–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏: {term}"

    await bot.send_message(ADMIN_CHAT_ID, text)
    await message.answer("–î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:", reply_markup=types.ReplyKeyboardMarkup(
        resize_keyboard=True, keyboard=[["üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π"]]))

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
