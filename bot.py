import logging
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "7680848123:AAHqNizmx3hOXmjVOmzdnwQCenlXHTWX8OA"
ADMIN_CHAT_ID = '5498505652'
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_data = {}

# –°—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π", "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
    await message.answer("üñê –í—ñ—Ç–∞—î–º–æ —É MyBox!\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:", reply_markup=keyboard)

# –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π
@dp.message_handler(lambda message: message.text == "üìç –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–∫–∞—Ü—ñ–π")
async def view_locations(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)

    locations = [
        ("üìç –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "https://maps.google.com/?q=50.425689,30.483118"),
        ("üìç –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1", "https://maps.google.com/?q=50.400233,30.457452"),
        ("üìç –≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞ 21", "https://maps.google.com/?q=50.457832,30.480274"),
        ("üìç –≤—É–ª. –°—ñ–º'—ó –°–æ—Å–Ω—ñ–Ω–∏—Ö 3", "https://maps.google.com/?q=50.434291,30.464987"),
        ("üìç –ø—Ä-—Ç –õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ 119", "https://maps.google.com/?q=50.426594,30.495850"),
        ("üìç –≤—É–ª. –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞ 5", "https://maps.google.com/?q=50.464835,30.490526"),
        ("üìç –≤—É–ª. –ü—É—Ö—ñ–≤—Å—å–∫–∞ 4–ê", "https://maps.google.com/?q=50.422968,30.510332"),
        ("üìç –≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞ 18", "https://maps.google.com/?q=50.438151,30.497368"),
        ("üìç –≤—É–ª. –ë–∞–ª—å–∑–∞–∫–∞ 85–ê", "https://maps.google.com/?q=50.395106,30.455319"),
        ("üìç –≤—É–ª. –ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó 5", "https://maps.google.com/?q=50.476872,30.464531"),
        ("üìç –≤—É–ª. –ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞ 9", "https://maps.google.com/?q=50.446179,30.476200"),
        ("üìç –≤—É–ª. –í—ñ—Å–∫–æ–∑–Ω–∞ 1", "https://maps.google.com/?q=50.453824,30.487111"),
        ("üìç –≤—É–ª. –ü—Ä–æ–º–∏—Å–ª–æ–≤–∞ 4", "https://maps.google.com/?q=50.425598,30.508532")
    ]

    for loc, link in locations:
        keyboard.add(types.InlineKeyboardButton(text=loc, url=link))

    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –Ω–∞ –∫–∞—Ä—Ç—ñ:", reply_markup=keyboard)

# –û—Ä–µ–Ω–¥–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
@dp.message_handler(lambda message: message.text == "üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
async def rent(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("5 —Ñ—É—Ç—ñ–≤", "7.5 —Ñ—É—Ç—ñ–≤", "15 —Ñ—É—Ç—ñ–≤", "30 —Ñ—É—Ç—ñ–≤")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text in ["5 —Ñ—É—Ç—ñ–≤", "7.5 —Ñ—É—Ç—ñ–≤", "15 —Ñ—É—Ç—ñ–≤", "30 —Ñ—É—Ç—ñ–≤"])
async def select_location(message: types.Message):
    user_data[message.from_user.id] = {"size": message.text}
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("üìç –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "üìç –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1", "üìç –≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞ 21", "üìç –≤—É–ª. –°—ñ–º'—ó –°–æ—Å–Ω—ñ–Ω–∏—Ö 3", "üìç –ø—Ä-—Ç –õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ 119")
    keyboard.add("üìç –≤—É–ª. –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞ 5", "üìç –≤—É–ª. –ü—É—Ö—ñ–≤—Å—å–∫–∞ 4–ê", "üìç –≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞ 18", "üìç –≤—É–ª. –ë–∞–ª—å–∑–∞–∫–∞ 85–ê", "üìç –≤—É–ª. –ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó 5")
    keyboard.add("üìç –≤—É–ª. –ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞ 9", "üìç –≤—É–ª. –í—ñ—Å–∫–æ–∑–Ω–∞ 1", "üìç –≤—É–ª. –ü—Ä–æ–º–∏—Å–ª–æ–≤–∞ 4")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:", reply_markup=keyboard)

# –í–∏–±—ñ—Ä –ª–æ–∫–∞—Ü—ñ—ó
@dp.message_handler(lambda message: message.text.startswith("üìç"))
async def select_duration(message: types.Message):
    user_data[message.from_user.id]["location"] = message.text
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏ (–≤ –º—ñ—Å—è—Ü—è—Ö):", reply_markup=types.ReplyKeyboardRemove())

@dp.message_handler(lambda message: message.text.isdigit())
async def get_name(message: types.Message):
    user_data[message.from_user.id]["months"] = int(message.text)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")

@dp.message_handler(lambda message: message.text.isalpha())
async def get_phone(message: types.Message):
    user_data[message.from_user.id]["name"] = message.text
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")

@dp.message_handler(lambda message: "+" in message.text or message.text.isdigit())
async def finish(message: types.Message):
    uid = message.from_user.id
    user_data[uid]["phone"] = message.text
    size = user_data[uid]["size"]
    months = user_data[uid]["months"]
    name = user_data[uid]["name"]
    phone = user_data[uid]["phone"]
    location = user_data[uid]["location"]

    prices = {
        "5 —Ñ—É—Ç—ñ–≤": 1850,
        "7.5 —Ñ—É—Ç—ñ–≤": 2350,
        "15 —Ñ—É—Ç—ñ–≤": 3800,
        "30 —Ñ—É—Ç—ñ–≤": 6650
    }

    price = prices[size] * months
    total = price  # –±–µ–∑ –∑–Ω–∏–∂–∫–∏

    text = f"‚úÖ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\nüë§ –Ü–º'—è: {name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: {size}\nüìç –õ–æ–∫–∞—Ü—ñ—è: {location}\nüìÖ –ú—ñ—Å—è—Ü—ñ–≤: {months}\nüí∞ –°—É–º–∞: {total} –≥—Ä–Ω"

    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=text)
    await message.answer("‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
