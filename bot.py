import logging
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "7680848123:AAHmbEGQ49ZB8SXTGof4l3mbZ9vcIbuV_6k"
ADMIN_CHAT_ID = 5498505652  # –í–∞—à Telegram ID

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_data = {}

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
    keyboard.add(
        types.KeyboardButton("üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"),
        types.KeyboardButton("üìç –õ–æ–∫–∞—Ü—ñ—ó"),
        types.KeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
    )
    await message.answer("üñê –í—ñ—Ç–∞—î–º–æ —É MyBox!", reply_markup=keyboard)
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:")

# –õ–æ–∫–∞—Ü—ñ—ó
@dp.message_handler(lambda msg: msg.text == "üìç –õ–æ–∫–∞—Ü—ñ—ó")
async def send_locations(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    locations = [
        ("üìç –≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "https://www.google.com/maps?q=–≤—É–ª.+–õ—É–≥–æ–≤–∞+9,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ü–ª–æ–¥–æ–≤–∞ 1", "https://www.google.com/maps?q=–≤—É–ª.+–ü–ª–æ–¥–æ–≤–∞+1,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞ 21", "https://www.google.com/maps?q=–≤—É–ª.+–î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞+21,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –°—ñ–º'—ó –°–æ—Å–Ω—ñ–Ω–∏—Ö 3", "https://www.google.com/maps?q=–≤—É–ª.+–°—ñ–º'—ó+–°–æ—Å–Ω—ñ–Ω–∏—Ö+3,+–ö–∏—ó–≤"),
        ("üìç –ø—Ä-—Ç –õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ 119", "https://www.google.com/maps?q=–ø—Ä–æ—Å–ø.+–õ–æ–±–∞–Ω–æ–≤—Å—å–∫–æ–≥–æ+119,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞ 5", "https://www.google.com/maps?q=–≤—É–ª.+–°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∞+5,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ü—É—Ö—ñ–≤—Å—å–∫–∞ 4–ê", "https://www.google.com/maps?q=–≤—É–ª.+–ü—É—Ö—ñ–≤—Å—å–∫–∞+4–ê,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞ 18", "https://www.google.com/maps?q=–≤—É–ª.+–ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞+18,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ë–∞–ª—å–∑–∞–∫–∞ 85–ê", "https://www.google.com/maps?q=–≤—É–ª.+–ë–∞–ª—å–∑–∞–∫–∞+85–ê,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó 5", "https://www.google.com/maps?q=–≤—É–ª.+–ë—É–¥—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó+5,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞ 9", "https://www.google.com/maps?q=–≤—É–ª.+–ë–æ—Ä–∏—Å–ø—ñ–ª—å—Å—å–∫–∞+9,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –í—ñ—Å–∫–æ–∑–Ω–∞ 1", "https://www.google.com/maps?q=–≤—É–ª.+–í—ñ—Å–∫–æ–∑–Ω–∞+1,+–ö–∏—ó–≤"),
        ("üìç –≤—É–ª. –ü—Ä–æ–º–∏—Å–ª–æ–≤–∞ 4", "https://www.google.com/maps?q=–≤—É–ª.+–ü—Ä–æ–º–∏—Å–ª–æ–≤–∞+4,+–ö–∏—ó–≤"),
    ]
    for name, url in locations:
        keyboard.add(types.InlineKeyboardButton(text=name, url=url))
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:", reply_markup=keyboard)

# –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
@dp.message_handler(lambda msg: msg.text == "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
async def contact(message: types.Message):
    await message.answer("üìû –¢–µ–ª–µ—Ñ–æ–Ω: +38 095 93 87 317\nüìß Email: myboxua55@gmail.com")

# –ü–æ—á–∞—Ç–æ–∫ –ø—Ä–æ—Ü–µ—Å—É –æ—Ä–µ–Ω–¥–∏
@dp.message_handler(lambda msg: msg.text == "üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
async def rent_start(message: types.Message):
    user_data[message.from_user.id] = {}
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
    # –ö–Ω–æ–ø–∫–∏ –∑ —Ä–æ–∑–º—ñ—Ä–∞–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ —Ç–∞ —Ü—ñ–Ω–∞–º–∏
    keyboard.add("5 —Ñ—É—Ç—ñ–≤ - 1850 –≥—Ä–Ω", "7.5 —Ñ—É—Ç—ñ–≤ - 2350 –≥—Ä–Ω",
                 "15 —Ñ—É—Ç—ñ–≤ - 3800 –≥—Ä–Ω", "30 —Ñ—É—Ç—ñ–≤ - 6650 –≥—Ä–Ω")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:", reply_markup=keyboard)

# –í–∏–±—ñ—Ä —Ç–µ—Ä–º—ñ–Ω—É –æ—Ä–µ–Ω–¥–∏
@dp.message_handler(lambda msg: "—Ñ—É—Ç—ñ–≤" in msg.text)
async def ask_months(message: types.Message):
    size = message.text.split(" - ")[0]
    user_data[message.from_user.id]["size"] = size
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=4)
    keyboard.add(*[str(i) for i in range(1, 13)])
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏ (–≤ –º—ñ—Å—è—Ü—è—Ö):", reply_markup=keyboard)

# –í–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ
@dp.message_handler(lambda msg: msg.text.isdigit() and 1 <= int(msg.text) <= 12)
async def ask_name(message: types.Message):
    user_data[message.from_user.id]["months"] = int(message.text)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")

# –í–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –∑–∞–≤–µ—Ä—à–µ–Ω–æ; —Ç–µ–ø–µ—Ä –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞
@dp.message_handler(lambda msg: msg.text.isalpha())
async def ask_phone(message: types.Message):
    user_data[message.from_user.id]["name"] = message.text
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button = types.KeyboardButton("üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    keyboard.add(button)
    await message.answer("–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É:", reply_markup=keyboard)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É)
@dp.message_handler(content_types=types.ContentType.CONTACT)
async def receive_contact(message: types.Message):
    user_data[message.from_user.id]["phone"] = message.contact.phone_number
    await send_summary(message)

# –í–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –≤—Ä—É—á–Ω—É
@dp.message_handler(lambda msg: msg.text and ("+" in msg.text or msg.text.replace(" ", "").isdigit()))
async def receive_manual_phone(message: types.Message):
    user_data[message.from_user.id]["phone"] = message.text
    await send_summary(message)

# –ü—ñ–¥—Å—É–º–æ–∫ –∑–∞—è–≤–∫–∏
async def send_summary(message: types.Message):
    uid = message.from_user.id
    data = user_data[uid]
    prices = {
        "5 —Ñ—É—Ç—ñ–≤": 1850,
        "7.5 —Ñ—É—Ç—ñ–≤": 2350,
        "15 —Ñ—É—Ç—ñ–≤": 3800,
        "30 —Ñ—É—Ç—ñ–≤": 6650
    }
    size = data["size"]
    months = data["months"]
    name = data["name"]
    phone = data["phone"]
    base_price = prices[size] * months
    discount = 0.05 if months >= 9 else 0.03 if months >= 6 else 0.02 if months >= 3 else 0
    total = int(base_price * (1 - discount))
    summary = (
        "‚úÖ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n"
        f"üë§ –Ü–º'—è: {name}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: {size}\n"
        f"üìÖ –ú—ñ—Å—è—Ü—ñ–≤: {months}\n"
        f"üí∞ –°—É–º–∞ –∑—ñ –∑–Ω–∏–∂–∫–æ—é: {total} –≥—Ä–Ω"
    )
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=summary)
    await message.answer("‚úÖ –ó–∞—è–≤–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ! –û—á—ñ–∫—É–π—Ç–µ –¥–∑–≤—ñ–Ω–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
